version: '3'

services:
  flux:
    build: ./flux
    container_name: flux
    environment:
      - INFLUXDB_URL=${DOCKER_INFLUX_HOST}
      - INFLUXDB_TOKEN=${INFLUX_TOKEN}
      - INFLUXDB_USERNAME=${INFLUX_USERNAME}
      - INFLUXDB_ORG=${INFLUX_ORG}
    volumes:
      - "${HORIZON_DEMO_PATH}/flux/query.flux:/go/flux/query.flux"
  
  ui:
    image: chronograf:latest
    container_name: ui
    ports:
      - "8888:8888"
    # env_file: .env
    environment:
      - INFLUXDB_URL=${DOCKER_CHRONO_INFLUX_HOST}
      - INFLUXDB_TOKEN=${INFLUX_TOKEN}
      - INFLUXDB_USERNAME=${INFLUX_USERNAME}
      - INFLUXDB_ORG=${INFLUX_ORG}
      - LOG_LEVEL=${CHRONO_LOG_LEVEL}

  influxd:
    image: quay.io/influxdb/influxdb:nightly
    container_name: influxd
    ports:
      - "8086:8086"
    # volumes:
    #   - "${HORIZON_DEMO_PATH}/influxd"

  broker:
    image: hivemq/hivemq4
    container_name: broker
    ports:
      - "1883:1883"
      - "8080:8080"
  
  telegraf:
    image: telegraf:latest
    container_name: telegraf
    volumes:
      - "${HORIZON_DEMO_PATH}/telegraf/telegraf.conf:/etc/telegraf/telegraf.conf"
    depends_on: 
      - influxd
      - broker
    # env_file: .env
    environment:
      - INFLUX_ORG=${INFLUX_ORG}
      - INFLUX_TOKEN=${INFLUX_TOKEN}

  cli:
    build: ./influx-cli
    container_name: cli
    depends_on: 
      - influxd

  influx_setup:
    image: influxdb:2.0.7
    # build: ./influx-cli
    container_name: influx_setup
    # env_file: .env
    environment:
        - DOCKER_INFLUXDB_INIT_USERNAME=${INFLUX_USERNAME}
        - DOCKER_INFLUXDB_INIT_PASSWORD=${INFLUX_PASSWORD}
        - DOCKER_INFLUXDB_INIT_ORG=${INFLUX_ORG}
        - DOCKER_INFLUXDB_INIT_BUCKET=mqtt
        - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=${INFLUX_TOKEN}
        # - INFLUX_USERNAME=${INFLUX_USERNAME}
        # - INFLUX_PASSWORD=${INFLUX_PASSWORD}
        # - INFLUX_ORG=${INFLUX_ORG}
        # - INFLUX_BUCKET=${INFLUX_BUCKET}
        # - INFLUX_TOKEN=${INFLUX_TOKEN}
        - DOCKER_INFLUX_HOST=${DOCKER_INFLUX_HOST}

    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
    depends_on:
      - influxd
    volumes:
      - "${HORIZON_DEMO_PATH}/average_temp_5m.flux:/average_temp_5m.flux"
      - "${HORIZON_DEMO_PATH}/cli_entrypoint.sh:/cli_entrypoint.sh"
    entrypoint: /cli_entrypoint.sh

  py_publisher:
    build:
      context: ./client
      dockerfile: Dockerfile
    stdin_open: true
    tty: true
    deploy:
      mode: replicated
      replicas: 10
    depends_on:
        - broker

